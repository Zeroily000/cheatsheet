"""
This module manages external dependencies.
"""
module(name = "pybind-bazel-vscode")

# https://registry.bazel.build/modules/rules_cc
bazel_dep(name = "rules_cc", version = "0.2.8")

# https://registry.bazel.build/modules/pybind11_bazel
bazel_dep(name = "pybind11_bazel", version = "2.13.6")

# https://registry.bazel.build/modules/abseil-cpp
bazel_dep(name = "abseil-cpp", version = "20250814.0")

# https://registry.bazel.build/modules/pybind11_abseil
bazel_dep(name = "pybind11_abseil", version = "202402.0")

# https://registry.bazel.build/modules/protobuf
bazel_dep(name = "protobuf", version = "32.1")

# https://registry.bazel.build/modules/pybind11_protobuf
bazel_dep(name = "pybind11_protobuf", version = "0.0.0-20250210-f02a2b7")

# https://registry.bazel.build/modules/googletest
bazel_dep(name = "googletest", version = "1.17.0.bcr.1")

# https://registry.bazel.build/modules/glog
bazel_dep(name = "glog", version = "0.7.1")

# https://registry.bazel.build/modules/boost.multi_index
bazel_dep(name = "boost.multi_index", version = "1.87.0")

# https://registry.bazel.build/modules/ceres-solver
bazel_dep(name = "ceres-solver", version = "2.2.0")

# https://registry.bazel.build/modules/imgui
bazel_dep(name = "imgui", version = "1.91.8")

# https://registry.bazel.build/modules/eigen
bazel_dep(name = "eigen", version = "5.0.0")

# https://registry.bazel.build/modules/glfw
bazel_dep(name = "glfw", version = "3.3.9")

# https://registry.bazel.build/modules/sophus
bazel_dep(name = "sophus", version = "1.22.10.bcr.1")

# https://registry.bazel.build/modules/rules_python
bazel_dep(name = "rules_python", version = "1.6.1")
python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
  python_version = "3.10.12",
)
pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
  hub_name = "mypypi",
  python_version = "3.10.12",
  requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "mypypi")

# https://registry.bazel.build/modules/rules_cuda
bazel_dep(name = "rules_cuda", version = "0.2.5")
cuda = use_extension("@rules_cuda//cuda:extensions.bzl", "toolchain")
cuda.local_toolchain(
    name = "local_cuda",
    toolkit_path = "",
)
use_repo(cuda, "local_cuda")
